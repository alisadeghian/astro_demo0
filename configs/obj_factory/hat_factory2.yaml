program: main.py
name: hat_factory_sweep2
project: hat_factory44
description: Generating hats using normal-BACON and ensembel CLIP
method: grid #random
# early_terminate: 
#   type: hyperband
#   min_iter: 150
metric:
  name: eval_clip_loss2_view
  goal: minimize
parameters:
  obj_path: 
    values: [data/brute_force_no_culling_rotated/cap1_90c6bffdc81cedbeb80102c6e0a7618a.obj,
             data/brute_force_no_culling_rotated/cap2_14df58bdedfbb41141edb96d309c9a23.obj,
             data/brute_force_no_culling_rotated/cap3_c2cf2cf35d08662945c5fa74440a4519.obj]
  prompt: 
    values: ["A 3D rendering of a luxury hat in Unreal Engine.", "A 3D rendering of a golden hat in Unreal Engine.", 
              "A 3D rendering of a dog's hat in Unreal Engine.", "A 3D rendering of a military hat in Unreal Engine.", "A 3D rendering of a pirate's hat in Unreal Engine.", 
              "A 3D rendering of a cowboy hat in Unreal Engine.", "A red cap with blue visor.", "A 3D rendering of a sports cap in Unreal Engine.", 
              "A 3D rendering of a luxury cap in Unreal Engine.", "A 3D rendering of a golden cap in Unreal Engine.", 
              "A 3D rendering of super mario's cap in Unreal Engine.", "A 3D rendering of a military cap in Unreal Engine.", 
              "A 3D rendering of a women luxury military hat in Unreal Engine.", "A 3D rendering of Nike cap in Unreal Engine.", "A 3D rendering of Adidas cap in Unreal Engine.", 
              "A 3D rendering of Louis Vuitton cap in Unreal Engine.", 
              "Super Mario", "Snoop Dogg", "roman", "Nike", "Adidas","sports cap"] ### HIGHLY ENCOURAGE TO ALWAYS ADD IN UNREAL ENGINE.
  output_dir: 
    value: obj_factory/hats/outputs
  n_iter: 
    value: 500
  n_augs:
    value: 1
  n_normaugs:
    value: 4
  clipavg: 
    value: 'view'
  geoloss: 
    values: [0]
  lr_decay: 
    values: [0.85]
  learning_rate:
    values: [0.0005]
  normratio:
    values: [0.0025]
  seed:
    values: [2022, 1990]
  pe: 
    value: 0
  frontview_std: 
    values: [4.0]
  frontview_elev_std: 
    values: [1.0]
  normmincrop:
    value: 0.1
  normmaxcrop: 
    values: [0.4]
  standardize: 
    value: 0
  model_name:
    values: ['ViT-B/32:0,RN50x16:0']
  coeff_models_deviate:
    values: [0.3]
  divers_batch_aug:
    values: [0]
  symmetry:
    value: 1
  maxcrop:
    value: 1.0
  normdepth:
    values: [2]
  colordepth:
    values: [2]
  camera_r:
    value: 1.0
  mesh_normalizer_func:
    value: 'min_max'
  neural_style_field:
    values: [BACON]
  depth:
    values: [8]
  width:
    values: [512]
  sigma:
    values: [224] # 384/2 + 8 = 200
  n_views:
    values: [5] 
  background_image_mode:
    values: ['change_per_iter']
  background_based_prompt:
    values: [0]
  # renderer_shape:
  #   values: [384]
  log_interval:
    value: 50

command:
  - ${env}
  - ${interpreter}
  - ${program}
  - ${args}
  - --frontview_center
  - 1.57
  - 0.1